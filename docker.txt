
██████╗░░█████╗░░█████╗░██╗░░██╗███████╗██████╗░
██╔══██╗██╔══██╗██╔══██╗██║░██╔╝██╔════╝██╔══██╗
██║░░██║██║░░██║██║░░╚═╝█████═╝░█████╗░░██████╔╝
██║░░██║██║░░██║██║░░██╗██╔═██╗░██╔══╝░░██╔══██╗
██████╔╝╚█████╔╝╚█████╔╝██║░╚██╗███████╗██║░░██║
╚═════╝░░╚════╝░░╚════╝░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝


------------------------
--DOCKER
------------------------
>Docker File		Es un archivo de texto donde defines instrucciones paso a paso para crear una imagen. 
			Es como una receta de cocina.

>Docker Image  		es el resultado de ejecutar el Dockerfile. Es una plantilla lista para crear contenedores. 
			Contiene el sistema operativo, tus programas, configuraciones, etc.
			No cambia, es inmutable.

>Docker Container	Un contenedor es una instancia en ejecución de una imagen. Es como correr una app dentro de su 				propio entorno. Puedes tener muchas instancias (contenedores) de una misma imagen, 
			y cada uno es independiente.


docker images	//see the images

docker ps		//ver contenedores en ejecucion
docker ps -a		//ver todo los contenedores incluso los detenidos

docker pull MySQL	//instala una imagen de MySQL dockerhub
docker run --name mymysql -e MYSQL_ROOT_PASSWORD=codersql mysql
docker run --name miotrabd -e MYSQL_ROOT_PASSWORD=codersql -p 7777:3306 mysql

docker exec -it mymysql bash
 o 
docker exec -it mymysql mysql -u root -p

------------
MYSQL
------------
docker run --name mysql-vscode \
  -e MYSQL_ROOT_PASSWORD=admin123 \
  -p 3306:3306 
  -d mysql:latest

-d: Inicia el contenedor en modo "detached", es decir, en segundo plano. Así no ocupa tu terminal. Si no lo pones, el contenedor corre en primer plano y muestra todos los logs directamente allí.

mysql:latest: Especifica qué imagen de Docker quieres usar. En este caso:

mysql: Nombre de la imagen (del repositorio oficial de Docker Hub).

latest: Etiqueta que indica que quieres la versión más reciente disponible.


docker rm nombredemicontenedor		//elimina el contenedor
-----------------------------------
IMPORTAR UN ARCHIVO SQL A MI BD
----------------------------------
sudo docker exec -i my-mysql mysql -u root -p empadronamiento < ~/Downloads/empadronamiento.sql
sudo docker exec -i my-mysql mysql -u root -padmin123 empadronamiento < ~/Downloads/empadronamiento.sql 	//aqui puse -padmin123 es con toda la contra

-----------------
POSTGRESQL
----------------

sudo docker run --name my-postgres \
  -e POSTGRES_USER=admin \
  -e POSTGRES_PASSWORD=admin123 \
  -e POSTGRES_DB=mi_base \
  -p 5432:5432 \
  -d postgres:13.22-bookworm


sudo docker exec -it my-postgres bash	//entrar al bash del contenedor

psql -U admin -d mydb	//con esto me conecto a mi db dentro del contenedor


------------------------------
--INICIAR MI IMAGEN YA CREADA
------------------------------
(EJEMPLO CON MYSQL)

docker start mymysql		//Enciende mi contenedor llamado mymysql
docker exec -it mymysql bash	//para interactuar con el sistema del contenedor
	     |
//-i: Acepta entradas, pero no ves lo que sucede.
//-t: Te da una terminal, pero no puedes escribir.

------------------------------
-- INSTALACION DE JENKINS
------------------------------
docker run -d -p 8080:8080 -p 50000:50000 -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk11	//busca la imagen de jenkins en mi pc local y si no lo encuentra lo descarga

docker run: Ejecuta un nuevo contenedor.

-d: Modo detached, ejecuta el contenedor en segundo plano.

-p 8080:8080: Mapea el puerto 8080 del contenedor al puerto 8080 de tu host (tu PC). Jenkins usa este puerto para su interfaz web.

-p 50000:50000: Mapea el puerto 50000 del contenedor al de tu PC. Este puerto es usado para comunicación remota con agentes Jenkins (ej. para pipelines distribuidos).

-v jenkins_home:/var/jenkins_home: Crea un volumen Docker llamado jenkins_home y lo monta en la ruta /var/jenkins_home dentro del contenedor. Esto permite persistencia de datos, como configuraciones, plugins y trabajos de Jenkins.

jenkins/jenkins:lts-jdk11: Nombre de la imagen.

Docker buscará esta imagen localmente, y si no existe, la descargará de Docker Hub.

lts-jdk11 indica que se trata de la versión LTS de Jenkins con JDK 11 preinstalado (ideal para compatibilidad).
